# Chefia POS Environment Configuration Example
# =============================================
# Copy this file to .env and fill in your values

# Environment Mode
NODE_ENV=development  # Options: development, staging, production
LOG_LEVEL=INFO       # Options: DEBUG, INFO, WARNING, ERROR, CRITICAL

# Database Configuration (Required)
POSTGRES_USER=posmodern
POSTGRES_PASSWORD=your_secure_password_here
POSTGRES_DB=posmodern
POSTGRES_PORT=5432
DB_HOST=localhost    # Use 'postgres' when running in Docker
DB_PORT=5432
DB_USER=posmodern
DB_PASSWORD=your_secure_password_here
DB_NAME=posmodern
DB_POOL_SIZE=10
DB_MAX_OVERFLOW=20
DB_ECHO=false

# Redis Configuration (Required)
REDIS_HOST=localhost  # Use 'redis' when running in Docker
REDIS_PORT=6379
REDIS_PASSWORD=your_redis_password_here

# RabbitMQ Configuration (Optional - for event-driven features)
RABBITMQ_USER=posmodern
RABBITMQ_PASSWORD=your_rabbitmq_password_here
RABBITMQ_HOST=localhost  # Use 'rabbitmq' when running in Docker
RABBITMQ_PORT=5672
RABBITMQ_MANAGEMENT_PORT=15672

# Backend API Configuration (Required)
BACKEND_PORT=8001
JWT_SECRET_KEY=generate_a_random_secret_key_here  # IMPORTANT: Change this!
JWT_ALGORITHM=HS256
JWT_EXPIRATION_HOURS=24
REFRESH_TOKEN_EXPIRATION_DAYS=30
CORS_ORIGINS=http://localhost:3000,http://localhost:3001,http://localhost:3002,http://localhost:3003

# Frontend Ports
POS_PORT=3000     # POS Terminal
KDS_PORT=3001     # Kitchen Display System
KIOSK_PORT=3002   # Self-service Kiosk
WAITER_PORT=3003  # Waiter Terminal

# Frontend API Configuration
VITE_API_URL=http://localhost:8001
VITE_WS_URL=ws://localhost:8001/ws
VITE_APP_NAME=Chefia POS System
VITE_APP_VERSION=1.0.0
VITE_DEBUG=true
VITE_ENABLE_DEBUG_TOOLBAR=true
VITE_ENABLE_HOT_RELOAD=true
VITE_ENABLE_MOCK_DATA=false
VITE_ENABLE_ANALYTICS=false
VITE_LOG_LEVEL=debug
VITE_ENABLE_CONSOLE_LOGS=false
VITE_ENABLE_PWA=false
VITE_ENABLE_SERVICE_WORKER=false

# Payment Gateway - Asaas (Required for payment processing)
ASAAS_API_KEY=your_asaas_api_key_here
ASAAS_ENV=sandbox  # Options: sandbox, production
ASAAS_WEBHOOK_TOKEN=your_webhook_token_here
PAYMENT_GATEWAY_ENV=sandbox

# Google Services (Optional)
GOOGLE_MAPS_API_KEY=your_google_maps_api_key_here
GOOGLE_ANALYTICS_ID=your_google_analytics_id_here

# WhatsApp Integration - Twilio (Optional)
TWILIO_ACCOUNT_SID=your_twilio_account_sid_here
TWILIO_AUTH_TOKEN=your_twilio_auth_token_here
TWILIO_WHATSAPP_FROM=whatsapp:+14155238886
TWILIO_PHONE_NUMBER=+1234567890

# AWS Services (Optional - for cloud features)
AWS_ACCESS_KEY_ID=your_aws_access_key_here
AWS_SECRET_ACCESS_KEY=your_aws_secret_key_here
AWS_REGION=us-east-1
AWS_S3_BUCKET=your_s3_bucket_name_here

# iFood Integration (Optional)
IFOOD_CLIENT_ID=your_ifood_client_id_here
IFOOD_CLIENT_SECRET=your_ifood_client_secret_here
IFOOD_MERCHANT_ID=your_ifood_merchant_id_here
IFOOD_ENVIRONMENT=sandbox  # Options: sandbox, production

# Rappi Integration (Optional)
RAPPI_CLIENT_ID=your_rappi_client_id_here
RAPPI_CLIENT_SECRET=your_rappi_client_secret_here
RAPPI_STORE_ID=your_rappi_store_id_here
RAPPI_ENVIRONMENT=sandbox  # Options: sandbox, production

# Fiscal Module - Brazilian Tax System (Required for Brazil)
SAT_ACTIVATION_CODE=your_sat_activation_code_here
SAT_SIGN_AC=your_sat_sign_ac_here
SAT_SOFTWARE_HOUSE_CNPJ=your_software_house_cnpj_here
NFCE_CERTIFICATE_PATH=/path/to/certificate.pfx
NFCE_CERTIFICATE_PASSWORD=your_certificate_password_here
FISCAL_ENVIRONMENT=homologacao  # Options: homologacao, producao

# Email Configuration (Optional)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your_email@gmail.com
SMTP_PASSWORD=your_email_password_here
SMTP_FROM_EMAIL=noreply@chefia-pos.com
SMTP_FROM_NAME=Chefia POS

# Monitoring & Analytics (Optional)
SENTRY_DSN=your_sentry_dsn_here
NEW_RELIC_LICENSE_KEY=your_new_relic_key_here
DATADOG_API_KEY=your_datadog_api_key_here

# Feature Flags
ENABLE_WEBSOCKET_SYNC=true
ENABLE_OFFLINE_MODE=true
ENABLE_MULTI_TENANT=false
ENABLE_ADVANCED_ANALYTICS=false
ENABLE_AI_FEATURES=false

# Security (Required - Generate strong keys!)
SECRET_KEY=generate_a_strong_secret_key_here
ENCRYPTION_KEY=generate_another_strong_key_here
API_RATE_LIMIT=100
API_RATE_LIMIT_PERIOD=60

# Paths & Directories
LOG_FILE=/var/log/pos-modern/app.log
UPLOAD_PATH=/app/uploads
TEMP_PATH=/app/temp

# Development Tools
DEBUG_SQL=false
DEBUG_REDIS=false
DEBUG_EVENTS=false
PROFILE_REQUESTS=false

# ============================================
# HOW TO GENERATE SECRET KEYS:
# ============================================
# Python method:
#   python -c "import secrets; print(secrets.token_hex(32))"
#
# OpenSSL method:
#   openssl rand -hex 32
#
# UUID method:
#   python -c "import uuid; print(str(uuid.uuid4()))"
# ============================================